#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 5.0.0 (26 January 2010) -- redhat 
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#
####### This file was created with chef cookbook chef-bacula::director ###########################

Director {                            # define myself
  Name = bacula-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/usr/libexec/bacula/query.sql"
  WorkingDirectory = "/var/spool/bacula"
  PidDirectory = "/var/run"
  Maximum Concurrent Jobs = 1
  Password = "<%= node['bacula']['dir']['password'] %>"         # Console password
  Messages = Daemon
}

#######################################################################################
#
#
################################# Default Jobs ########################################
JobDefs {
  Name = DefaultJob
  Type = Backup
  Level = Incremental
  Client = bacula-fd
  FileSet = "Full Set"
  Schedule = WeeklyCycle
  Storage = File
  Messages = Standard
  Pool = Monthly
  Priority = 10
  Write Bootstrap = "/var/spool/bacula/%c.bsr"
  JobDefs = DefaultJob
}


#
# Define the main nightly save backup job
#   By default, this job will back up to disk in /tmp
Job {
  Name = "Server bacula-server"
  JobDefs = DefaultJob
  Client = bacula-fd
}


# Backup the catalog database (after the nightly save)
Job {
  Name = BackupCatalog
  JobDefs = DefaultJob
  Level = Full
  FileSet = Catalog
  Schedule = WeeklyCycleAfterBackup
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  Run Before Job = "/usr/libexec/bacula/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  Run After Job = /usr/libexec/bacula/delete_catalog_backup
  Write Bootstrap = "/var/spool/bacula/%n.bsr"
  Priority = 11
  Pool = File
  Client = bacula-fd
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = RestoreFiles
  Type = Restore
  Client = bacula-fd
  FileSet = "Full Set"
  Storage = File
  Pool = Default
  Messages = Standard
  Where = /tmp/bacula-restores
  Enabled = No
}

#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = WeeklyCycle
  Run = Level=Full Pool=Monthly 1st sun at 23:05
  Run = Level=Differential Pool=Weekly 2nd-5th sun at 23:05
  Run = Level=Incremental Pool=Daily mon-sat at 23:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = WeeklyCycleAfterBackup
  Run = Level=Full Pool=File sun-sat at 23:10
}
#######################################################################################
#
#
########################## File Sets ##################################################
# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = MD5
    }
#    
#  Put your list of files here, preceded by 'File =', one per line
#    or include an external list with:
#
#    File = <file-name>
#
#  Note: / backs up everything on the root partition.
#    if you have other partitions such as /usr or /home
#    you will probably want to add them too.
#
#  By default this is defined to point to the Bacula binary
#    directory to give a reasonable FileSet to backup to
#    disk storage during initial testing.
#
    File = /bin
    File = /boot
    File = /etc
    File = /home
    File = /opt
    File = /root
    File = /sbin
    File = /usr
    File = /var
  }

#
# If you backup the root directory, the following two excluded
#   files can be useful
#
  Exclude {
    File = /var/spool/bacula
    File = /tmp
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
  }
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/spool/bacula/bacula.sql"
  }
}
FileSet {
  Name = "Windows 7"
  Include {
    File = C:/
    Options {
      signature = MD5
    }
    File = D:/
  }
  Exclude {
    File = C:/Windows
    File = "C:/Program Files"
    File = "C:/Program Files (x86)"
  }
}
FileSet {
  Name = "Windows XP"
  Include {
    File = C:/
    Options {
      signature = MD5
    }
  }
  Exclude {
    File = C:/Windows
    File = "C:/Program Files"
    File = C:/WINNT
  }
}
#######################################################################################
#
#
################################### Default Clients ###################################
# Client (File Services) to backup
Client {
  Name = bacula-fd
  Address = 127.0.0.1
  FDPort = 9102
  Catalog = MyCatalog
  Password = supersecret
  File Retention = 30 days
  Job Retention = 6 months
  AutoPrune = yes
}

#######################################################################################
#
#
################################## Storage and Pools ##################################

# Definition of file storage device
Storage {
  Name = File
# Do not use "localhost" here    
  Address = <%= node['bacula']['dir']['ipaddress'] %>
  SDPort = 9103
  Password = "<%= node['bacula']['sd']['password'] %>"
  Device = FileStorage
  Media Type = File
}

# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 365 days
  LabelFormat = Default_
}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 365 days
  Maximum Volume Bytes = 1500G
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  LabelFormat = backup_job_
}
# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}

Pool {
  Name = Daily
  Pool Type = Backup
  Volume Retention = 14 days
  Recycle = yes
  AutoPrune = yes
  LabelFormat = Daily_
}
Pool {
  Name = Weekly
  Pool Type = Backup
  Volume Retention = 4 weeks
  Recycle = yes
  AutoPrune = yes
  LabelFormat = Weekly_
}
Pool {
  Name = Monthly
  Pool Type = Backup
  Volume Retention = 12 months
  Recycle = yes
  AutoPrune = yes
  LabelFormat = Monthly_
}

#######################################################################################
#
#
################################## Catalog and messages ###############################

# Generic catalog service
Catalog {
  Name = MyCatalog
# Uncomment the following line if you want the dbi driver
# dbdriver = "dbi:sqlite3"; dbaddress = 127.0.0.1; dbport =  
  dbname = "<%= node['bacula']['mysql']['dbname'] %>"; dbuser = "<%= node['bacula']['mysql']['username'] %>"; dbpassword = "<%= node['bacula']['mysql']['password'] %>"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address. 
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root@localhost = all, !skipped            
  operator = root@localhost = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/var/spool/bacula/log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root@localhost = all, !skipped            
  console = all, !skipped, !saved
  append = "/var/log/bacula.log" = all, !skipped
}

#######################################################################################
